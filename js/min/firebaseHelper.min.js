"use strict";const ObjectType={Page:0};function FirebaseHelper(){let _instance;(FirebaseHelper=function(){return _instance}).prototype=this,(_instance=new FirebaseHelper).constructor=FirebaseHelper;const firebaseConfig=FirebaseConfig().getConfig();firebase.initializeApp(firebaseConfig);const _FirebasePageReference=new FirebasePageReference;return _instance.isUserLoggedIn=function(resolve,reject){firebase.auth().onAuthStateChanged(function(user){user?resolve(user):reject()})},_instance.signIn=function(email,password){return firebase.auth().signInWithEmailAndPassword(email,password)},_instance.signOut=function(){return firebase.auth().signOut()},_instance.getReference=function(objectType){if(objectType===ObjectType.Page)return _FirebasePageReference.getReference()},_instance.add=function(objectType,obj){if(objectType===ObjectType.Page)return _FirebasePageReference.add(obj)},_instance.save=function(objectType,id,newValues){if(objectType===ObjectType.Page)return _FirebasePageReference.save(id,newValues)},_instance.remove=function(objectType,id){if(objectType===ObjectType.Page)return _FirebasePageReference.remove(id)},_instance}function FirebasePageReference(){let _instance;(FirebasePageReference=function(){return _instance}).prototype=this,(_instance=new FirebasePageReference).constructor=FirebasePageReference;const _refPages=firebase.database().ref("pages");return _instance.getReference=function(){return _refPages},_instance.add=function(page){if(page instanceof Page==!1)throw new Error(`object is invalid (${page.constructor.name})`);let newPage=_refPages.push();return page.id=newPage.key,newPage.set(page),page},_instance.save=function(pageKey,page){if(page instanceof Page==!1)throw new Error(`object is invalid (${page.constructor.name})`);_refPages.child(pageKey).update(page)},_instance.remove=function(pageKey){_refPages.child(pageKey).remove()},_instance}